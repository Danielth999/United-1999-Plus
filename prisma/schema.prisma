generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId    Int            @id @default(autoincrement())
  email     String         @unique
  username  String         @unique
  password  String
  roles     UserRole[]
  favorites FavoriteItem[]
}

model Role {
  roleId   Int        @id @default(autoincrement())
  roleName String
  users    UserRole[]
}

model UserRole {
  userRoleId Int  @id @default(autoincrement())
  userId     Int
  roleId     Int
  user       User @relation(fields: [userId], references: [userId])
  role       Role @relation(fields: [roleId], references: [roleId])

  @@unique([userId, roleId])
}

model Category {
  categoryId    Int           @id @default(autoincrement())
  name          String
  subcategories Subcategory[]
}

model Subcategory {
  subcategoryId Int       @id @default(autoincrement())
  name          String
  categoryId    Int
  category      Category  @relation(fields: [categoryId], references: [categoryId])
  products      Product[]

  @@unique([name, categoryId])
}

model Product {
  productId   Int    @id @default(autoincrement())
  name        String
  description String
  price       Float
  stock       Int
  imageUrl    String?
  subcategoryId Int
  subcategory   Subcategory    @relation(fields: [subcategoryId], references: [subcategoryId])
  favorites     FavoriteItem[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model FavoriteItem {
  favoriteId Int     @id @default(autoincrement())
  userId     Int
  productId  Int
  user       User    @relation(fields: [userId], references: [userId])
  product    Product @relation(fields: [productId], references: [productId])

  @@unique([userId, productId])
}
